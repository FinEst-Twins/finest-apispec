# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class InverterReading(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, timestamp: datetime=None, voltage_string1: float=None, current_string1: float=None, output_string1: int=None, voltage_string2: float=None, current_string2: float=None, output_string2: int=None, voltage_string3: float=None, current_string3: float=None, output_string3: int=None, voltage_phase1: float=None, current_phase1: float=None, output_phase1: int=None, voltage_phase2: float=None, current_phase2: float=None, output_phase2: int=None, voltage_phase3: float=None, current_phase3: float=None, output_phase3: int=None, total_energy: int=None, daily_enery: int=None, status: int=None, fault: int=None):  # noqa: E501
        """InverterReading - a model defined in Swagger

        :param name: The name of this InverterReading.  # noqa: E501
        :type name: str
        :param timestamp: The timestamp of this InverterReading.  # noqa: E501
        :type timestamp: datetime
        :param voltage_string1: The voltage_string1 of this InverterReading.  # noqa: E501
        :type voltage_string1: float
        :param current_string1: The current_string1 of this InverterReading.  # noqa: E501
        :type current_string1: float
        :param output_string1: The output_string1 of this InverterReading.  # noqa: E501
        :type output_string1: int
        :param voltage_string2: The voltage_string2 of this InverterReading.  # noqa: E501
        :type voltage_string2: float
        :param current_string2: The current_string2 of this InverterReading.  # noqa: E501
        :type current_string2: float
        :param output_string2: The output_string2 of this InverterReading.  # noqa: E501
        :type output_string2: int
        :param voltage_string3: The voltage_string3 of this InverterReading.  # noqa: E501
        :type voltage_string3: float
        :param current_string3: The current_string3 of this InverterReading.  # noqa: E501
        :type current_string3: float
        :param output_string3: The output_string3 of this InverterReading.  # noqa: E501
        :type output_string3: int
        :param voltage_phase1: The voltage_phase1 of this InverterReading.  # noqa: E501
        :type voltage_phase1: float
        :param current_phase1: The current_phase1 of this InverterReading.  # noqa: E501
        :type current_phase1: float
        :param output_phase1: The output_phase1 of this InverterReading.  # noqa: E501
        :type output_phase1: int
        :param voltage_phase2: The voltage_phase2 of this InverterReading.  # noqa: E501
        :type voltage_phase2: float
        :param current_phase2: The current_phase2 of this InverterReading.  # noqa: E501
        :type current_phase2: float
        :param output_phase2: The output_phase2 of this InverterReading.  # noqa: E501
        :type output_phase2: int
        :param voltage_phase3: The voltage_phase3 of this InverterReading.  # noqa: E501
        :type voltage_phase3: float
        :param current_phase3: The current_phase3 of this InverterReading.  # noqa: E501
        :type current_phase3: float
        :param output_phase3: The output_phase3 of this InverterReading.  # noqa: E501
        :type output_phase3: int
        :param total_energy: The total_energy of this InverterReading.  # noqa: E501
        :type total_energy: int
        :param daily_enery: The daily_enery of this InverterReading.  # noqa: E501
        :type daily_enery: int
        :param status: The status of this InverterReading.  # noqa: E501
        :type status: int
        :param fault: The fault of this InverterReading.  # noqa: E501
        :type fault: int
        """
        self.swagger_types = {
            'name': str,
            'timestamp': datetime,
            'voltage_string1': float,
            'current_string1': float,
            'output_string1': int,
            'voltage_string2': float,
            'current_string2': float,
            'output_string2': int,
            'voltage_string3': float,
            'current_string3': float,
            'output_string3': int,
            'voltage_phase1': float,
            'current_phase1': float,
            'output_phase1': int,
            'voltage_phase2': float,
            'current_phase2': float,
            'output_phase2': int,
            'voltage_phase3': float,
            'current_phase3': float,
            'output_phase3': int,
            'total_energy': int,
            'daily_enery': int,
            'status': int,
            'fault': int
        }

        self.attribute_map = {
            'name': 'name',
            'timestamp': 'timestamp',
            'voltage_string1': 'VoltageString1',
            'current_string1': 'CurrentString1',
            'output_string1': 'OutputString1',
            'voltage_string2': 'VoltageString2',
            'current_string2': 'CurrentString2',
            'output_string2': 'OutputString2',
            'voltage_string3': 'VoltageString3',
            'current_string3': 'CurrentString3',
            'output_string3': 'OutputString3',
            'voltage_phase1': 'VoltagePhase1',
            'current_phase1': 'CurrentPhase1',
            'output_phase1': 'OutputPhase1',
            'voltage_phase2': 'VoltagePhase2',
            'current_phase2': 'CurrentPhase2',
            'output_phase2': 'OutputPhase2',
            'voltage_phase3': 'VoltagePhase3',
            'current_phase3': 'CurrentPhase3',
            'output_phase3': 'OutputPhase3',
            'total_energy': 'TotalEnergy',
            'daily_enery': 'DailyEnery',
            'status': 'Status',
            'fault': 'Fault'
        }

        self._name = name
        self._timestamp = timestamp
        self._voltage_string1 = voltage_string1
        self._current_string1 = current_string1
        self._output_string1 = output_string1
        self._voltage_string2 = voltage_string2
        self._current_string2 = current_string2
        self._output_string2 = output_string2
        self._voltage_string3 = voltage_string3
        self._current_string3 = current_string3
        self._output_string3 = output_string3
        self._voltage_phase1 = voltage_phase1
        self._current_phase1 = current_phase1
        self._output_phase1 = output_phase1
        self._voltage_phase2 = voltage_phase2
        self._current_phase2 = current_phase2
        self._output_phase2 = output_phase2
        self._voltage_phase3 = voltage_phase3
        self._current_phase3 = current_phase3
        self._output_phase3 = output_phase3
        self._total_energy = total_energy
        self._daily_enery = daily_enery
        self._status = status
        self._fault = fault

    @classmethod
    def from_dict(cls, dikt) -> 'InverterReading':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The InverterReading of this InverterReading.  # noqa: E501
        :rtype: InverterReading
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this InverterReading.


        :return: The name of this InverterReading.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this InverterReading.


        :param name: The name of this InverterReading.
        :type name: str
        """

        self._name = name

    @property
    def timestamp(self) -> datetime:
        """Gets the timestamp of this InverterReading.


        :return: The timestamp of this InverterReading.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp: datetime):
        """Sets the timestamp of this InverterReading.


        :param timestamp: The timestamp of this InverterReading.
        :type timestamp: datetime
        """

        self._timestamp = timestamp

    @property
    def voltage_string1(self) -> float:
        """Gets the voltage_string1 of this InverterReading.


        :return: The voltage_string1 of this InverterReading.
        :rtype: float
        """
        return self._voltage_string1

    @voltage_string1.setter
    def voltage_string1(self, voltage_string1: float):
        """Sets the voltage_string1 of this InverterReading.


        :param voltage_string1: The voltage_string1 of this InverterReading.
        :type voltage_string1: float
        """

        self._voltage_string1 = voltage_string1

    @property
    def current_string1(self) -> float:
        """Gets the current_string1 of this InverterReading.


        :return: The current_string1 of this InverterReading.
        :rtype: float
        """
        return self._current_string1

    @current_string1.setter
    def current_string1(self, current_string1: float):
        """Sets the current_string1 of this InverterReading.


        :param current_string1: The current_string1 of this InverterReading.
        :type current_string1: float
        """

        self._current_string1 = current_string1

    @property
    def output_string1(self) -> int:
        """Gets the output_string1 of this InverterReading.


        :return: The output_string1 of this InverterReading.
        :rtype: int
        """
        return self._output_string1

    @output_string1.setter
    def output_string1(self, output_string1: int):
        """Sets the output_string1 of this InverterReading.


        :param output_string1: The output_string1 of this InverterReading.
        :type output_string1: int
        """

        self._output_string1 = output_string1

    @property
    def voltage_string2(self) -> float:
        """Gets the voltage_string2 of this InverterReading.


        :return: The voltage_string2 of this InverterReading.
        :rtype: float
        """
        return self._voltage_string2

    @voltage_string2.setter
    def voltage_string2(self, voltage_string2: float):
        """Sets the voltage_string2 of this InverterReading.


        :param voltage_string2: The voltage_string2 of this InverterReading.
        :type voltage_string2: float
        """

        self._voltage_string2 = voltage_string2

    @property
    def current_string2(self) -> float:
        """Gets the current_string2 of this InverterReading.


        :return: The current_string2 of this InverterReading.
        :rtype: float
        """
        return self._current_string2

    @current_string2.setter
    def current_string2(self, current_string2: float):
        """Sets the current_string2 of this InverterReading.


        :param current_string2: The current_string2 of this InverterReading.
        :type current_string2: float
        """

        self._current_string2 = current_string2

    @property
    def output_string2(self) -> int:
        """Gets the output_string2 of this InverterReading.


        :return: The output_string2 of this InverterReading.
        :rtype: int
        """
        return self._output_string2

    @output_string2.setter
    def output_string2(self, output_string2: int):
        """Sets the output_string2 of this InverterReading.


        :param output_string2: The output_string2 of this InverterReading.
        :type output_string2: int
        """

        self._output_string2 = output_string2

    @property
    def voltage_string3(self) -> float:
        """Gets the voltage_string3 of this InverterReading.


        :return: The voltage_string3 of this InverterReading.
        :rtype: float
        """
        return self._voltage_string3

    @voltage_string3.setter
    def voltage_string3(self, voltage_string3: float):
        """Sets the voltage_string3 of this InverterReading.


        :param voltage_string3: The voltage_string3 of this InverterReading.
        :type voltage_string3: float
        """

        self._voltage_string3 = voltage_string3

    @property
    def current_string3(self) -> float:
        """Gets the current_string3 of this InverterReading.


        :return: The current_string3 of this InverterReading.
        :rtype: float
        """
        return self._current_string3

    @current_string3.setter
    def current_string3(self, current_string3: float):
        """Sets the current_string3 of this InverterReading.


        :param current_string3: The current_string3 of this InverterReading.
        :type current_string3: float
        """

        self._current_string3 = current_string3

    @property
    def output_string3(self) -> int:
        """Gets the output_string3 of this InverterReading.


        :return: The output_string3 of this InverterReading.
        :rtype: int
        """
        return self._output_string3

    @output_string3.setter
    def output_string3(self, output_string3: int):
        """Sets the output_string3 of this InverterReading.


        :param output_string3: The output_string3 of this InverterReading.
        :type output_string3: int
        """

        self._output_string3 = output_string3

    @property
    def voltage_phase1(self) -> float:
        """Gets the voltage_phase1 of this InverterReading.


        :return: The voltage_phase1 of this InverterReading.
        :rtype: float
        """
        return self._voltage_phase1

    @voltage_phase1.setter
    def voltage_phase1(self, voltage_phase1: float):
        """Sets the voltage_phase1 of this InverterReading.


        :param voltage_phase1: The voltage_phase1 of this InverterReading.
        :type voltage_phase1: float
        """

        self._voltage_phase1 = voltage_phase1

    @property
    def current_phase1(self) -> float:
        """Gets the current_phase1 of this InverterReading.


        :return: The current_phase1 of this InverterReading.
        :rtype: float
        """
        return self._current_phase1

    @current_phase1.setter
    def current_phase1(self, current_phase1: float):
        """Sets the current_phase1 of this InverterReading.


        :param current_phase1: The current_phase1 of this InverterReading.
        :type current_phase1: float
        """

        self._current_phase1 = current_phase1

    @property
    def output_phase1(self) -> int:
        """Gets the output_phase1 of this InverterReading.


        :return: The output_phase1 of this InverterReading.
        :rtype: int
        """
        return self._output_phase1

    @output_phase1.setter
    def output_phase1(self, output_phase1: int):
        """Sets the output_phase1 of this InverterReading.


        :param output_phase1: The output_phase1 of this InverterReading.
        :type output_phase1: int
        """

        self._output_phase1 = output_phase1

    @property
    def voltage_phase2(self) -> float:
        """Gets the voltage_phase2 of this InverterReading.


        :return: The voltage_phase2 of this InverterReading.
        :rtype: float
        """
        return self._voltage_phase2

    @voltage_phase2.setter
    def voltage_phase2(self, voltage_phase2: float):
        """Sets the voltage_phase2 of this InverterReading.


        :param voltage_phase2: The voltage_phase2 of this InverterReading.
        :type voltage_phase2: float
        """

        self._voltage_phase2 = voltage_phase2

    @property
    def current_phase2(self) -> float:
        """Gets the current_phase2 of this InverterReading.


        :return: The current_phase2 of this InverterReading.
        :rtype: float
        """
        return self._current_phase2

    @current_phase2.setter
    def current_phase2(self, current_phase2: float):
        """Sets the current_phase2 of this InverterReading.


        :param current_phase2: The current_phase2 of this InverterReading.
        :type current_phase2: float
        """

        self._current_phase2 = current_phase2

    @property
    def output_phase2(self) -> int:
        """Gets the output_phase2 of this InverterReading.


        :return: The output_phase2 of this InverterReading.
        :rtype: int
        """
        return self._output_phase2

    @output_phase2.setter
    def output_phase2(self, output_phase2: int):
        """Sets the output_phase2 of this InverterReading.


        :param output_phase2: The output_phase2 of this InverterReading.
        :type output_phase2: int
        """

        self._output_phase2 = output_phase2

    @property
    def voltage_phase3(self) -> float:
        """Gets the voltage_phase3 of this InverterReading.


        :return: The voltage_phase3 of this InverterReading.
        :rtype: float
        """
        return self._voltage_phase3

    @voltage_phase3.setter
    def voltage_phase3(self, voltage_phase3: float):
        """Sets the voltage_phase3 of this InverterReading.


        :param voltage_phase3: The voltage_phase3 of this InverterReading.
        :type voltage_phase3: float
        """

        self._voltage_phase3 = voltage_phase3

    @property
    def current_phase3(self) -> float:
        """Gets the current_phase3 of this InverterReading.


        :return: The current_phase3 of this InverterReading.
        :rtype: float
        """
        return self._current_phase3

    @current_phase3.setter
    def current_phase3(self, current_phase3: float):
        """Sets the current_phase3 of this InverterReading.


        :param current_phase3: The current_phase3 of this InverterReading.
        :type current_phase3: float
        """

        self._current_phase3 = current_phase3

    @property
    def output_phase3(self) -> int:
        """Gets the output_phase3 of this InverterReading.


        :return: The output_phase3 of this InverterReading.
        :rtype: int
        """
        return self._output_phase3

    @output_phase3.setter
    def output_phase3(self, output_phase3: int):
        """Sets the output_phase3 of this InverterReading.


        :param output_phase3: The output_phase3 of this InverterReading.
        :type output_phase3: int
        """

        self._output_phase3 = output_phase3

    @property
    def total_energy(self) -> int:
        """Gets the total_energy of this InverterReading.


        :return: The total_energy of this InverterReading.
        :rtype: int
        """
        return self._total_energy

    @total_energy.setter
    def total_energy(self, total_energy: int):
        """Sets the total_energy of this InverterReading.


        :param total_energy: The total_energy of this InverterReading.
        :type total_energy: int
        """

        self._total_energy = total_energy

    @property
    def daily_enery(self) -> int:
        """Gets the daily_enery of this InverterReading.


        :return: The daily_enery of this InverterReading.
        :rtype: int
        """
        return self._daily_enery

    @daily_enery.setter
    def daily_enery(self, daily_enery: int):
        """Sets the daily_enery of this InverterReading.


        :param daily_enery: The daily_enery of this InverterReading.
        :type daily_enery: int
        """

        self._daily_enery = daily_enery

    @property
    def status(self) -> int:
        """Gets the status of this InverterReading.


        :return: The status of this InverterReading.
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status: int):
        """Sets the status of this InverterReading.


        :param status: The status of this InverterReading.
        :type status: int
        """

        self._status = status

    @property
    def fault(self) -> int:
        """Gets the fault of this InverterReading.


        :return: The fault of this InverterReading.
        :rtype: int
        """
        return self._fault

    @fault.setter
    def fault(self, fault: int):
        """Sets the fault of this InverterReading.


        :param fault: The fault of this InverterReading.
        :type fault: int
        """

        self._fault = fault
